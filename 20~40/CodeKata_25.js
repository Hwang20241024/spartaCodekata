////최대공약수와 최소공배수
/*
두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, 
solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.

제한 사항
두 수는 1이상 1000000이하의 자연수입니다.

*/


function solution(n, m) {
    // 큰 수가 앞에 오도록 정렬
    if (n < m) [n, m] = [m, n]; // 큰 수가 앞에 오도록 바꿔줌

    // 최대공약수 계산 (유클리드 호제법)
    // 큰수가 무조건 앞으로 가야한다는데 잘 모르겠다.
    const gcd = (x, y) => {
        while (y !== 0) {
            let temp = y;
            y = x % y;
            x = temp;
        }
        return x;
    };
    
    // 최소공배수 계산
    const lcm = (x, y) => (x * y) / gcd(x, y);
    
    return [gcd(n, m), lcm(n, m)];
}